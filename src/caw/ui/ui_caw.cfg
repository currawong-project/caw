{
  base_dir:    "~/src/caw/src/caw/ui/io",
  io_dict:     "~/src/caw/src/caw/cfg/io.cfg"            // Runtime configuration file.
  proc_dict:   "~/src/caw/src/libcw/flow/proc_dict.cfg", // Processor class definition file.
  udp_dict:    "~/src/caw/src/libcw/flow/udp_dict.cfg",  // User defined proc files 
    
  programs: {

    ex_01_meter: {

      network: {
      
        procs: {
	  af: { class:audio_file_in, args:{ fname:"$/60_samples.wav", eofFl:false, on_off:true }},	  
	  aout:{ class:audio_out, in:{ in:af.out }, args:{ dev_label:"main"} }
	  mtr: { class:audio_meter, in:{ in:af.out } args:{ rpt_ms: 50 } }
	  
        }
      }
    }

   ex_02_mod_sine: {

      network: {

        procs: {
          lfo:   { class: sine_tone, args:{ hz:3, dc:440, gain:110 }}
          sh:    { class: sample_hold,            in:{ in:lfo.out } }
          osc:   { class: sine_tone, preset:mono, in:{ hz:sh.out } },
	  aout:  { class:audio_out, in:{ in:osc.out }, args:{ dev_label:"main"} }
        }
      }
    }

   // Demonstrate a network with a polyphonic subnet.
   ex_03_homog_poly: {
   
     network: {

        procs: {

          g_list:  { class: list, args: { in:0, list:[ 110f,220f,440f ]}},
	  dc_list: { class: list, args: { in:0, list:[ 220f,440f,880f ]}},
	  
          osc_poly: {
	    class: poly,
	    
	    // Create 3 instances of 'network' and run them in concurrently.
	    args: { count:3, parallel_fl:true },  
	   
	    network: {
	      procs: {
	        lfo:  { class: sine_tone,   in:{ _.dc:_.dc_list.value_, _.gain:_.g_list.value_ }  args: { ch_cnt:1, hz:3 }},
	        sh:   { class: sample_hold, in:{ in:lfo.out }},
	        osc:  { class: sine_tone,   in:{ hz: sh.out }},
	      }
	    }       	    
	  }

          // Iterate over the instances of `osc_poly.osc_.out` to create one `audio_merge`
	  // input for every output from the polyphonic network.
	  merge: { class: audio_merge,    in:{ in_:osc_poly.osc_.out}, args:{ gain:1, out_gain:0.5 }},
	  aout:  { class:audio_out, in:{ in:merge.out }, args:{ dev_label:"main"} }
        }
      }
    }
  

}